apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
    # Add upstream for letsencrypt job
    upstream certbot {
      server certbot:80 max_fails=0 fail_timeout=1s;
    }

    upstream app-a-service {
      server app-a-service:8080 max_fails=0 fail_timeout=1s;
    }

    server {
      listen 80;
      listen [::]:80;
      server_name  _;
      location / {
        add_header Content-Type text/plain;
        return 200 "Kubernetes + Let's encrypt demo. This should be accessible through https!";
      }
      # Redirect all traffic in /.well-known/ to lets encrypt
      location ^~ /.well-known/acme-challenge/ {
        proxy_pass http://certbot/.well-known/acme-challenge/;
        #proxy_http_version 1.1;
        #proxy_set_header upgrade $http_upgrade;
        #proxy_set_header connection $connection_upgrade;
        #proxy_set_header Host $http_host;
        #proxy_set_header x-forwarded-host $http_host;
        #proxy_set_header x-real-ip $remote_addr;
        #proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
        #proxy_set_header x-forwarded-protocol $scheme;
        #proxy_set_header x-forwarded-proto $scheme;
      }
      location /a {
        #proxy_pass  http://app-a-service.default.svc.cluster.local:8080/;
        proxy_pass http://app-a-service/;
      }
      location /b {
        proxy_pass  http://app-b-service.default.svc.cluster.local:8080/;
      }
    }
